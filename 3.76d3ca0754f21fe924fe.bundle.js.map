{"version":3,"file":"3.76d3ca0754f21fe924fe.bundle.js","sources":["webpack:///./src/containers/chapter-list-container/index.tsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withNamespaces } from 'react-i18next';\nimport { Helmet } from 'react-helmet';\nimport * as H from 'history';\nimport { CourseInstructionType } from '../../typings';\nimport ChapterList from '../../components/chapter-list';\nimport Spinner from '../../components/spinner';\nimport Header from '../../components/header';\nimport Footer from '../../components/footer';\nimport './style.css';\nimport { compose } from 'redux';\nimport { withFirebase } from 'react-redux-firebase';\nimport { openAuthModal } from '../../redux/auth';\n\ninterface IProps {\n  t: (key: string) => string;\n  i18n: {\n    language: string;\n    changeLanguage: (lang: string) => void;\n  };\n  history: H.History;\n  location: H.Location;\n  instructions: CourseInstructionType;\n  profile: any;\n  ch1Progress: number;\n  openAuthModal: () => void;\n}\n\nclass ChapterContainer extends React.Component<IProps, {}> {\n  public render(): React.ReactNode {\n    const { instructions, i18n, t, profile, ch1Progress } = this.props;\n    const { isLoaded, isEmpty, progress } = profile;\n    const lang: string = i18n.language;\n    if (instructions === undefined || instructions[lang] === undefined) {\n      return <Spinner />;\n    }\n\n    if (!isLoaded) {\n      return <Spinner />;\n    }\n    const intructionsLocalized = instructions[lang];\n    const documentTitle = `LearnScilla - An interactive tutorial for people to learn Scilla`;\n    const isAuth = !isEmpty;\n\n    return (\n      <div>\n        <Header />\n        <Helmet>\n          <title>{documentTitle}</title>\n        </Helmet>\n        <div className=\"container\">\n          <div className=\"chapter-list-container\">\n            <div className=\"row py-5\">\n              <div className=\"col-sm-10 col-md-8 col-lg-5 mr-auto ml-auto text-center\">\n                <h3>{t('chapter.listTitle')}</h3>\n                <br />\n                <ChapterList\n                  chapterList={intructionsLocalized}\n                  isAuth={isAuth}\n                  progress={progress}\n                  ch1Progress={ch1Progress}\n                  navigate={this.navigate}\n                  t={t}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n\n  private navigate = (chapterNum, lessonNum) => {\n    const { profile, history } = this.props;\n    const { isEmpty } = profile;\n    const isAuth = !isEmpty;\n    if (!isAuth && chapterNum > 1) {\n      return this.props.openAuthModal();\n    }\n\n    const startingChapterPath = `/chapter/${chapterNum}/lesson/${lessonNum}`;\n    return history.push(startingChapterPath);\n  };\n}\n\n// @ts-ignore\nconst WithTranslation = withNamespaces()(ChapterContainer);\n// @ts-check\nconst mapStateToProps = (state) => ({\n  instructions: state.course.courseInstructions,\n  profile: state.firebase.profile,\n  ch1Progress: state.persist.ch1Progress\n});\nconst mapDispatchToProps = (dispatch) => ({\n  openAuthModal: () => dispatch(openAuthModal())\n});\n\nexport default compose(\n  withFirebase,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(WithTranslation);\n"],"mappings":"AA6BA","sourceRoot":""}