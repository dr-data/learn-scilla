{"version":3,"file":"4.76d3ca0754f21fe924fe.bundle.js","sources":["webpack:///./src/containers/account-container/index.tsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { compose } from 'redux';\nimport { withNamespaces } from 'react-i18next';\nimport { withFirebase } from 'react-redux-firebase';\nimport Header from '../../components/header';\nimport Footer from '../../components/footer';\nimport * as H from 'history';\n\nimport Spinner from '../../components/spinner';\nimport { paths } from '../../routes';\nimport Button from '../../components/button';\n\ninterface IProps {\n  t: (key: string) => string;\n  history: H.History;\n  location: H.Location;\n  firebase: any;\n  auth: any;\n}\n\nclass AccountContainer extends React.Component<IProps, {}> {\n  public render(): React.ReactNode {\n    const { auth, t } = this.props;\n    const { displayName, email, createdAt, isLoaded } = auth;\n    const documentTitle = `LearnScilla - Account`;\n\n    return (\n      <div>\n        <Header />\n        <Helmet>\n          <title>{documentTitle}</title>\n        </Helmet>\n        <div className=\"container\">\n          <div className=\"row py-5\">\n            <div className=\"col-sm-10 col-md-8 col-lg-5 mr-auto ml-auto text-center\">\n              <div className=\"card card-body border-secondary\">\n                {isLoaded ? (\n                  <div className=\"py-5 text-secondary\">\n                    {displayName === undefined ? null : <p>{displayName}</p>}\n                    <p>{email}</p>\n                    {createdAt === undefined ? null : (\n                      <p>Since {new Date(parseInt(createdAt, 10)).toLocaleDateString()}</p>\n                    )}\n                    <br />\n\n                    <Button\n                      type=\"secondary\"\n                      size=\"sm\"\n                      text={t('account.deleteAccount')}\n                      onClick={this.deleteAccount}\n                      ariaLabel={'Delete Account'}\n                    />\n                  </div>\n                ) : (\n                  <Spinner />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n\n  private deleteAccount = () => {\n    const { firebase } = this.props;\n    const user = firebase.auth().currentUser;\n\n    const providerData = user.providerData[0];\n    const { providerId } = providerData;\n\n    if (providerId === 'github.com') {\n      this.deleteGitHubAccount();\n    } else if (providerId === 'google.com') {\n      this.deleteGoogleAccount();\n    } else {\n      alert('Auth Provider Not Found');\n    }\n  };\n\n  private deleteGitHubAccount = async () => {\n    const { firebase } = this.props;\n    const provider = new firebase.auth.GithubAuthProvider();\n    try {\n      const result = await firebase.auth().signInWithPopup(provider);\n      const { credential } = result;\n      const { accessToken } = credential;\n      const userCredential = firebase.auth.GithubAuthProvider.credential(accessToken);\n      return this.deleteWithCredential(userCredential);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  private deleteGoogleAccount = async () => {\n    const { firebase } = this.props;\n    const provider = new firebase.auth.GoogleAuthProvider();\n    try {\n      const result = await firebase.auth().signInWithPopup(provider);\n      const { credential } = result;\n      const { idToken } = credential;\n      const userCredential = firebase.auth.GoogleAuthProvider.credential(idToken);\n      return this.deleteWithCredential(userCredential);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  private deleteWithCredential = async (credential) => {\n    const { firebase, history } = this.props;\n    const user = firebase.auth().currentUser;\n    try {\n      await user.reauthenticateAndRetrieveDataWithCredential(credential);\n      await user.delete();\n      alert('Your account has been deleted');\n      return history.push(paths.chapterList);\n    } catch (error) {\n      console.log(error);\n      alert(error.message);\n    }\n  };\n}\n\n// @ts-ignore\nconst WithTranslation = withNamespaces()(AccountContainer);\n// @ts-check\nconst mapStateToProps = (state) => ({\n  auth: state.firebase.auth\n});\n\nexport default compose(\n  withFirebase,\n  connect(\n    mapStateToProps,\n    undefined\n  )\n)(WithTranslation);\n"],"mappings":"AAsBA","sourceRoot":""}